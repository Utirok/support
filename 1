import pygame
from pygame.locals import *
import random

class GameOfLife:
    def __init__(self, width = 640, height = 480, cell_size = 10, speed = 10):
        self.width = width
        self.height = height
        self.cell_size = cell_size

        self.screen_size = width, height
        self.screen = pygame.display.set_mode(self.screen_size)

        self.number_cells_width = self.width // self.cell_size
        self.number_cells_height = self.height // self.cell_size

        self.speed = speed
        self.cell_list = self.init_cell_list_rand()


    def draw_grid(self):
        for x in range(0, self.width, self.cell_size):
            pygame.draw.line(self.screen, pygame.Color('black'), (x, 0), (x, self.height))
        for y in range(0, self.height, self.cell_size):
            pygame.draw.line(self.screen, pygame.Color('black'),
                (0, y), (self.width, y))


    def run(self):
        pygame.init()
        clock = pygame.time.Clock()
        pygame.display.set_caption('Game of Life')
        self.screen.fill(pygame.Color('white'))
        running = True
        while running:
            for event in pygame.event.get():
                if event.type == QUIT:
                    running = False
            self.draw_grid()
            self.draw_cell_list()
            pygame.display.flip()
            clock.tick(self.speed)
        pygame.quit()


    def init_cell_list_rand(self, randomize=False):
        return [[random.randrange(0,2) for j in range(self.number_cells_width)] for i in range(self.number_cells_height)]


    def draw_cell_list(self):
        for i in range(0, len(self.cell_list)):
            for j in range(0, len(self.cell_list[i])):
                self.list = self.neighbours(i, j)
                self.change(i, j)
                rectangle = pygame.Rect(j*self.cell_size, i*self.cell_size, self.cell_size, self.cell_size)
                if self.cell_list[i][j] == 0:
                    pygame.draw.rect(self.screen, [255, 255, 255], rectangle)
                else:
                    pygame.draw.rect(self.screen, [0, 0, 0], rectangle)


    #def cords_neighbours(self, i, j):
    #   self.cords_list = [i-1, j-1], [i-1, j], [i-1, j+1], [i, j-1], [i, j+1], [i+1, j-1], [i+1, j], [i+1, j+1]
    #    return self.cords_list


# if j == self.number_cells_width: self.cell_list[j] (а не от j+1)
# if j == 0: self.cell_list[j] а не j-1
# если i равно сколько их по высоте то i а не i+1
# если i равен нулю, то i а не i-1



    def neighbours(self, i, j):
        if i != self.number_cells_height and i != 0 and j != self.number_cells_width and j != 0:
            neighbours = [self.cell_list[i-1][j-1], self.cell_list[i-1][j], self.cell_list[i-1][j+1], self.cell_list[i][j-1], self.cell_list[i][j+1], self.cell_list[i+1][j-1], self.cell_list[i+1][j], self.cell_list[i+1][j+1]]
        elif i == self.number_cells_height and i != 0 and j != self.number_cells_width and j != 0:
            neighbours = [self.cell_list[i-1][j-1], self.cell_list[i-1][j], self.cell_list[i-1][j+1], self.cell_list[i][j-1], self.cell_list[i][j+1]]
        elif i == 0 and i != self.number_cells_height and j != self.number_cells_width and j != 0:
            neighbours = [self.cell_list[i][j-1], self.cell_list[i][j+1], self.cell_list[i+1][j-1], self.cell_list[i+1][j], self.cell_list[i+1][j+1]]
        elif j == self.number_cells_width and i != 0 and i != self.number_cells_height:
            neighbours = [self.cell_list[i-1][j-1], self.cell_list[i-1][j], self.cell_list[i][j-1], self.cell_list[i+1][j-1], self.cell_list[i+1][j]]
        elif j == 0 and i != 0 and i != self.number_cells_height:
            neighbours = [self.cell_list[i-1][j], self.cell_list[i-1][j+1], self.cell_list[i][j+1], self.cell_list[i+1][j], self.cell_list[i+1][j+1]]
        elif i == 0 and j == 0:
            neighbours = [self.cell_list[i][j+1], self.cell_list[i+1][j], self.cell_list[i+1][j+1]]
        elif i == 0 and j == self.number_cells_width:
            neighbours = [self.cell_list[i][j-1], self.cell_list[i+1][j-1], self.cell_list[i+1][j]]
        elif i == self.number_cells_height and j == 0:
            neighbours = [self.cell_list[i-1][j], self.cell_list[i-1][j+1], self.cell_list[i][j+1]]
        elif i == self.number_cells_height and j == self.number_cells_width:
            neighbours = [self.cell_list[i-1][j-1], self.cell_list[i-1][j], self.cell_list[i][j-1]]






        return self.neighbours


    def change(self, i, j):
        count = 0
        for self.cell_list[i][j] in self.cell_list:
            if self.cell_list[i][j] == 1:
                count = count + 1
        if count == 2 or 3 and self.cell_list[i][j] == 1:
            self.cell_list[i][j] = 1
        else:
            self.cell_list[i][j] = 0
        if count == 3 and self.cell_list[i][j] == 0:
            self.cell_list[i][j] = 1


if __name__ == '__main__':
    game = GameOfLife(320, 240, 20)
    game.run()
    #print(game.neighbours(10, 5))
